<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>


  <data name="CreateFactCommandValidatorTitleIsRequiredError" xml:space="preserve">
    <value>Title is required.</value>
  </data>
  <data name="CreateFactCommandValidatorFactIsRequiredError" xml:space="preserve">
    <value>Fact Content is required.</value>
  </data>
  <data name="CreateFactCommandValidatorTitleMaxLengthError" xml:space="preserve">
    <value>Title length should not be longer than {0} symbols.</value>
  </data>
  <data name="CreateFactCommandValidatorFactContentMaxLengthError" xml:space="preserve">
    <value>Fact Content length should not be longer than {0} symbols.</value>
  </data>
  <data name="CreateFactHandlerStreetcodeWithIdDoesNotExistError" xml:space="preserve">
    <value>The streetcode with id {0} does not exist.</value>
  </data>
  <data name="CreateFactHandlerImageWithIdDoesNotExistError" xml:space="preserve">
    <value>The image with id {0} does not exist.</value>
  </data>
  <data name="CreateFactHandlerCannotConvertNullToFactError" xml:space="preserve">
    <value>Cannot convert null to fact.</value>
  </data>
  <data name="CreateFactHandlerFailedToCreateFactError" xml:space="preserve">
    <value>Failed to create a fact.</value>
  </data>
    <data name="DeleteFactHandlerNoFactFoundByEnteredIdError" xml:space="preserve">
    <value>No fact found by entered Id - {0}.</value>
  </data>
  <data name="DeleteFactHandlerFailedToDeleteError" xml:space="preserve">
    <value>Failed to delete fact.</value>
  </data>
  <data name="GetAllFactsHandlerCanNotFindAnyFactsError" xml:space="preserve">
    <value>Cannot find any fact.</value>
  </data>
  <data name="GetFactByIdCannotFindAnyFactWithCorrespondingIdError" xml:space="preserve">
    <value>"Cannot find any fact with corresponding id: {0}.</value>
  </data>


  <data name="GetFactByStreetcodeHandlerCanNotFindFactWithGivenStreetcodeError" xml:space="preserve">
    <value>Cannot find any fact by the streetcode id: {0}.</value>
  </data>



   <data name="ResetFactOrderHandlerCannotFindAnyFactByStreetcodeIdError" xml:space="preserve">
    <value>Cannot find any fact by the streetcode id: {0}.</value>
  </data>
  <data name="ResetFactOrderHandlerFailedToResetOrderNumbersError" xml:space="preserve">
    <value>Failed to reset order numbers.</value>
  </data>
    <data name="ResetFactOrderHandlerFailedToSetOrderNumbersError" xml:space="preserve">
    <value>Failed to set order numbers.</value>
  </data>


  <data name="UpdateFactCommandValidatorTitleIsRequiredError" xml:space="preserve">
    <value>Title is required.</value>
  </data>
  <data name="UpdateFactCommandValidatorFactIsRequiredError" xml:space="preserve">
    <value>Fact Content is required.</value>
  </data>
  <data name="UpdateFactCommandValidatorTitleMaxLengthError" xml:space="preserve">
    <value>Title length should not be longer than {0} symbols.</value>
  </data>
  <data name="UpdateFactCommandValidatorFactContentMaxLengthError" xml:space="preserve">
    <value>Fact Content length should not be longer than {0} symbols.</value>
  </data>
   <data name="UpdateFactHandlerFactWithIdDoesNotExistError" xml:space="preserve">
    <value>The fact with id {request.Fact.Id} does not exist.</value>
  </data>
    <data name="UpdateFactHandlerStreetcodeWithIdDoesNotExistError" xml:space="preserve">
    <value>The streetcode with id {0} does not exist.</value>
  </data>
  <data name="UpdateFactHandlerImageWithIdDoesNotExistError" xml:space="preserve">
    <value>The image with id {0} does not exist.</value>
  </data>
  <data name="UpdateFactHandlerCannotConvertNullToFactError" xml:space="preserve">
    <value>Cannot convert null to fact.</value>
  </data>
  <data name="UpdateFactHandlerFailedToUpdateError" xml:space="preserve">
    <value>Failed to update fact.</value>
  </data>


  <data name="DeleteRelatedFigureHandlerFailedToDeleteError" xml:space="preserve">
    <value>Failed to delete a relation.</value>
  </data>
  <data name="DeleteRelatedFigureHandlerCannotFindRelationBetweenStreetcodesWithCorrespondingIdsError" xml:space="preserve">
    <value>Cannot find a relation between streetcodes with corresponding ids: {0} {1}.</value>
  </data>


  <data name="GetRelatedFigureByStreetcodeIdHandlerCannotFindAnyRelatedFigureByStreetcodeIdError" xml:space="preserve">
    <value>Cannot find any related figures by a streetcode id: {0}.</value>
  </data>


   <data name="GetRelatedFigureByTagIdHandlerCannotFindAnyStreetcodeWithcorrespondingTagIdError" xml:space="preserve">
    <value>Cannot find any streetcode with corresponding tagid: {0}</value>
  </data>


  <data name="CreateRelatedFigureValidatorObserverIdIsRequiredError" xml:space="preserve">
    <value>Observer Id is required.</value>
  </data>
  <data name="CreateRelatedFigureValidatorTargetIdIsRequiredError" xml:space="preserve">
    <value>Target Id is required.</value>
  </data>
  <data name="CreateRelatedFigureHandlerNoExistingStreetcodeWithIdError" xml:space="preserve">
    <value>No existing streetcode with id: {0}</value>
  </data>
  <data name="CreateRelatedFigureHandlerFailedToCreateRelationError" xml:space="preserve">
    <value>Failed to create a relation.</value>
  </data>


  <data name="CreateRelatedTermHandlerWordIsRequiredError" xml:space="preserve">
    <value>Word is required.</value>
  </data>
  <data name="CreateRelatedTermHandlerMaxWordLengthError" xml:space="preserve">
    <value>Word length should not be longer than {0} symbols.</value>
  </data>
  <data name="CreateRelatedTermHandlerTermIdIsRequiredError" xml:space="preserve">
    <value>Term Id is required.</value>
  </data>
  <data name="CreateRelatedTermHandlerCannotCreateNewRelatedWordForTermError" xml:space="preserve">
    <value>Cannot create new related word for a term!</value>
  </data>
  <data name="CreateRelatedTermHandlerWordWithThisDefinitionAlreadyExistsError" xml:space="preserve">
    <value>Слово з цим визначенням уже існує.</value>
  </data>
  <data name="CreateRelatedTermHandlerCannotSaveChangesInDatabaseAfterRelatedWordCreationError" xml:space="preserve">
    <value>Cannot save changes in the database after related word creation!</value>
  </data>
  <data name="CreateRelatedTermHandlerCannotMapEntityError" xml:space="preserve">
    <value>Cannot map entity!</value>
  </data>


  <data name="DeleteRelatedTermHandlerCannotFindRelatedTermError" xml:space="preserve">
    <value>Cannot find a related term: {0}.</value>
  </data>
  <data name="DeleteRelatedTermHandlerFailedToDeleteRelatedTermError" xml:space="preserve">
    <value>Failed to delete a related term.</value>
  </data>


  <data name="GetAllRelatedTermsByTermIdHandlerCannotGetWordsByTermIdError" xml:space="preserve">
    <value>Cannot get words by term id.</value>
  </data>
  <data name="GetAllRelatedTermsByTermIdHandlerCannotCreateDtosForRelatedWordsError" xml:space="preserve">
    <value>Cannot create DTOs for related words!</value>
  </data>


  <data name="UpdateRelatedTermHandlerWordIsRequiredError" xml:space="preserve">
    <value>Word is required.</value>
  </data>
  <data name="UpdateRelatedTermHandlerMaxWordLengthError" xml:space="preserve">
    <value>Word length should not be longer than {0} symbols.</value>
  </data>
  <data name="UpdateRelatedTermHandlerTermIdIsRequiredError" xml:space="preserve">
    <value>Term Id is required.</value>
  </data>

  <data name="DeleteSoftStreetcodeHandlerCannotFindStreetcodeWithCorrespondingIdError" xml:space="preserve">
    <value>Cannot find a streetcode with corresponding categoryId: {0}.</value>
  </data>
  <data name="DeleteSoftStreetcodeHandlerFailedToChangeStatusOfStreetcodeToDeletedError" xml:space="preserve">
    <value>Failed to change status of streetcode to deleted.</value>
  </data>


  <data name="GetAllStreetcodesCatalogHandlerCannotFindAnySubtitlesError" xml:space="preserve">
    <value>Cannot find any subtitles.</value>
  </data>


  <data name="GetAllStreetcodesMainPageHandlerNoStreetcodesExistNowError" xml:space="preserve">
    <value>No streetcodes exist now.</value>
  </data>


  <data name="GetAllStreetcodesShortHandlerNoStreetcodesExistNowError" xml:space="preserve">
    <value>No streetcodes exist now.</value>
  </data>


  <data name="GetStreetcodeByIdHandlerCannotFindAnyStreetcodeWithCorrespondingIdError" xml:space="preserve">
    <value>Cannot find any streetcode with corresponding id: {0}</value>
  </data>

  <data name="GetStreetcodeByIndexHandlerCannotFindAnyStreetcodeWithCorrespondingIndexError" xml:space="preserve">
    <value>Cannot find any streetcode with corresponding index: {0}</value>
  </data>


  <data name="GetStreetcodeByTransliterationUrlHandlerCannotFindStreetcodeByTransliterationUrlError" xml:space="preserve">
    <value>Cannot find streetcode by transliteration url: {0}</value>
  </data>


  <data name="GetStreetcodesCountHandlerNoStreetcodesExistNowError" xml:space="preserve">
    <value>No streetcodes exist now.</value>
  </data>


  <data name="GetStreetcodeShortByIdHandlerCannotFindStreetcodeByIdError" xml:space="preserve">
    <value>Cannot find streetcode by id.</value>
  </data>
  <data name="GetStreetcodeShortByIdHandlerCannotMapStreetcodeToShortDtoError" xml:space="preserve">
    <value>Cannot map streetcode to shortDTO.</value>
  </data>

  <data name="GetAllTermsHandlerCannotFindAnyTermError" xml:space="preserve">
    <value>Cannot find any term.</value>
  </data>

  <data name="GetTermByIdHandlerCannotFindAnyTermWithCorrespondingIdError" xml:space="preserve">
    <value>Cannot find any term with corresponding id: {0}</value>
  </data>


  <data name="GetAllTextsHandlerCannotFindAnyTextError" xml:space="preserve">
    <value>Cannot find any text.</value>
  </data>

    <data name="GetTextByIdHandlerCannotFindAnyTextWithCorrespondingIdError" xml:space="preserve">
    <value>Cannot find any text with corresponding id: {0}</value>
  </data>

    <data name="GetTextByStreetcodeIdHandlerCannotFindTransactionLinkByStreetcodeThisStreetcodeDoesNotExistError" xml:space="preserve">
    <value>Cannot find a transaction link by a streetcode id: {0}, because such streetcode doesn`t exist</value>
  </data>

    <data name="GetParsedTextAdminPreviewHandlerTextWasNotParsedSuccessfullyError" xml:space="preserve">
    <value>Text was not parsed successfully.</value>
  </data>
</root>